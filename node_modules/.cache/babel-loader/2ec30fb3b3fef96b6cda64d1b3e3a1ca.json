{"remainingRequest":"/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/node_modules/babel-loader/lib/index.js!/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/node_modules/eslint-loader/index.js??ref--13-0!/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/src/components/BattleGround/BattleGround.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/src/components/BattleGround/BattleGround.js","mtime":1566206968263},{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  name: 'BattleGround',\n  data: function data() {\n    return {\n      playerHealth: 100,\n      monsterHealth: 100,\n      newGame: false,\n      playerHit: 0,\n      monsterHit: 0,\n      winner: '',\n      minDamageMonster: 5,\n      minDamagePlayer: 4,\n      minHealPlayer: 7,\n      messagePlayerHit: \"PLAYER HIT MONSTER BY \",\n      messageMonsterHit: \"MONSTER HIT PLAYER BY \",\n      messagePlayerHeal: \"PLAYER HEALS HIMSELF BY \",\n      specialAttackActive: 0,\n      attacks: [],\n      componentName: \"BattleGroundInstruction\"\n    };\n  },\n  methods: {\n    checker: function checker() {\n      if (this.monsterHealth <= 0 || this.playerHealth <= 0) {\n        if (this.monsterHealth <= 0 && this.playerHealth <= 0) {\n          this.winner = 'draw';\n        } else if (this.monsterHealth <= 0) {\n          this.winner = 'user';\n        } else if (this.playerHealth <= 0) {\n          this.winner = 'computer';\n        }\n\n        this.newGame = false;\n\n        if (this.winner == 'draw') {\n          alert(\"That's a draw\");\n        } else {\n          alert(\"Winner is \" + this.winner);\n        }\n\n        return false;\n      } else {\n        return true;\n      }\n    },\n    attack: function attack() {\n      this.monsterHit = this.attackHit(this.minDamageMonster);\n      this.playerHealth -= this.monsterHit;\n      this.playerHit = this.attackHit(this.minDamagePlayer);\n      this.monsterHealth -= this.playerHit;\n      this.addLog(this.messageMonsterHit + this.monsterHit, this.messagePlayerHit + this.playerHit);\n      this.specialAttackActive++;\n      this.checker();\n    },\n    heal: function heal() {\n      this.monsterHit = this.attackHit(this.minDamageMonster);\n      this.playerHealth -= this.monsterHit;\n      this.playerHit = this.attackHit(this.minHealPlayer);\n      this.playerHealth += this.playerHit;\n\n      if (this.playerHealth > 100) {\n        this.playerHealth = 100;\n        this.addLog(this.messageMonsterHit + this.monsterHit, \"PLAYER HEALS HIMSELF UPTO 100\");\n      } else {\n        this.addLog(this.messageMonsterHit + this.monsterHit, this.messagePlayerHeal + this.playerHit);\n      }\n\n      this.checker();\n    },\n    specialattack: function specialattack() {\n      this.monsterHit = this.attackHit(this.minDamageMonster);\n      this.playerHealth -= this.monsterHit;\n      this.playerHit = this.attackHit(this.minDamagePlayer);\n      this.monsterHealth -= this.playerHit;\n      this.addLog(this.messageMonsterHit + this.monsterHit, this.messagePlayerHit + this.playerHit);\n      this.specialAttackActive = 0;\n      this.checker();\n    },\n    newGameOpen: function newGameOpen() {\n      this.playerHealth = 100;\n      this.monsterHealth = 100;\n      this.specialAttackActive = 0;\n      this.newGame = true;\n      this.attacks = [];\n    },\n    attackHit: function attackHit(base) {\n      return Math.max(Math.floor(Math.random() * 15), base);\n    },\n    giveUp: function giveUp() {\n      this.newGame = false;\n    },\n    addLog: function addLog(messageOne, messageTwo) {\n      this.attacks.push(messageOne);\n      this.attacks.push(messageTwo);\n    },\n    newComponentCall: function newComponentCall() {\n      this.$emit('newComponent', this.componentName);\n    }\n  }\n};",{"version":3,"sources":["/Users/vijaykrishna/Downloads/Tutorialcodes/fromscratch/src/components/BattleGround/BattleGround.js"],"names":["name","data","playerHealth","monsterHealth","newGame","playerHit","monsterHit","winner","minDamageMonster","minDamagePlayer","minHealPlayer","messagePlayerHit","messageMonsterHit","messagePlayerHeal","specialAttackActive","attacks","componentName","methods","checker","alert","attack","attackHit","addLog","heal","specialattack","newGameOpen","base","Math","max","floor","random","giveUp","messageOne","messageTwo","push","newComponentCall","$emit"],"mappings":"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","sourcesContent":["\nexport default {\n    name:'BattleGround',\n    data () {\n        return {\n            playerHealth:100,\n            monsterHealth:100,\n            newGame: false,\n            playerHit:0,\n            monsterHit:0,\n            winner:'',\n            minDamageMonster:5,\n            minDamagePlayer:4,\n            minHealPlayer:7,\n            messagePlayerHit :\"PLAYER HIT MONSTER BY \",\n            messageMonsterHit : \"MONSTER HIT PLAYER BY \",\n            messagePlayerHeal : \"PLAYER HEALS HIMSELF BY \",\n            specialAttackActive : 0,\n            attacks: [],\n            componentName:\"BattleGroundInstruction\"\n        }\n    },\n    methods : {\n        checker () {\n            if(this.monsterHealth<=0 || this.playerHealth<=0) {\n                if(this.monsterHealth<=0 && this.playerHealth<=0) {\n                    this.winner='draw'\n\n                } else if (this.monsterHealth<=0) {\n                    this.winner='user'\n                } else if (this.playerHealth <= 0) {\n                    this.winner='computer'\n                }\n                this.newGame = false;\n                if(this.winner=='draw'){\n                    alert(\"That's a draw\")\n                } else {\n                    alert(\"Winner is \" + this.winner)\n                }\n                \n                return false\n            } else {\n                return true\n            }       \n        },\n         attack () {\n            this.monsterHit = this.attackHit(this.minDamageMonster);\n            this.playerHealth -= this.monsterHit;\n            this.playerHit = this.attackHit(this.minDamagePlayer);\n            this.monsterHealth -= this.playerHit;\n            this.addLog(this.messageMonsterHit + this.monsterHit,this.messagePlayerHit + this.playerHit);\n            this.specialAttackActive ++;\n            this.checker();   \n        },\n        heal () {\n            this.monsterHit = this.attackHit(this.minDamageMonster);\n            this.playerHealth -= this.monsterHit;\n            this.playerHit = this.attackHit(this.minHealPlayer);\n            this.playerHealth += this.playerHit;\n            if(this.playerHealth>100) {\n                this.playerHealth=100\n                this.addLog(this.messageMonsterHit + this.monsterHit,\"PLAYER HEALS HIMSELF UPTO 100\");\n            } else {\n                this.addLog(this.messageMonsterHit + this.monsterHit,this.messagePlayerHeal + this.playerHit);\n            }\n            this.checker();\n        },\n        specialattack () {\n            this.monsterHit = this.attackHit(this.minDamageMonster);\n            this.playerHealth -= this.monsterHit;\n            this.playerHit = this.attackHit(this.minDamagePlayer);\n            this.monsterHealth -= this.playerHit;\n            this.addLog(this.messageMonsterHit + this.monsterHit,this.messagePlayerHit + this.playerHit);\n            this.specialAttackActive = 0;\n            this.checker();\n        },\n        newGameOpen () {\n            this.playerHealth=100;\n            this.monsterHealth=100;\n            this.specialAttackActive=0;\n            this.newGame=true;\n            this.attacks=[];\n        },\n        attackHit (base) {\n            return Math.max(Math.floor(Math.random()*15),base);\n        },\n        giveUp () {\n            this.newGame=false;\n        },\n        addLog (messageOne,messageTwo) {\n            this.attacks.push(messageOne);\n            this.attacks.push(messageTwo);\n        },\n        newComponentCall () {\n            this.$emit('newComponent',this.componentName);\n        }\n    }\n}"]}]}