{"remainingRequest":"/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/node_modules/babel-loader/lib/index.js!/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/node_modules/eslint-loader/index.js??ref--13-0!/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/src/pages/Practise/Practise.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/src/pages/Practise/Practise.js","mtime":1566809336119},{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/node_modules/cache-loader/dist/cjs.js","mtime":1566809327503},{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/node_modules/babel-loader/lib/index.js","mtime":1566809327265},{"path":"/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/node_modules/eslint-loader/index.js","mtime":1566809329189}],"contextDependencies":[],"result":["export default {\n  name: 'Practise',\n  data: function data() {\n    return {\n      userHealth: 100,\n      computerHealth: 100,\n      newGame: false,\n      playerHit: 0,\n      monsterHit: 0,\n      winner: '',\n      messagePlayerHit: \"PLAYER HIT MONSTER BY \",\n      messageMonsterHit: \"MONSTER HIT PLAYER BY \",\n      messagePlayerHeal: \"PLAYER HEALS HIMSELF BY \",\n      attacks: []\n    };\n  },\n  methods: {\n    checker: function checker() {\n      if (this.computerHealth <= 0 || this.userHealth <= 0) {\n        if (this.computerHealth <= 0 && this.userHealth <= 0) {\n          this.winner = 'draw';\n        } else if (this.computerHealth <= 0) {\n          this.winner = 'user';\n        } else if (this.userHealth <= 0) {\n          this.winner = 'computer';\n        }\n\n        this.newGame = false;\n        alert(\"Winner is \" + this.winner);\n        return false;\n      } else {\n        return true;\n      }\n    },\n    attack: function attack() {\n      this.monsterHit = Math.floor(Math.random() * 15);\n      this.userHealth -= this.monsterHit;\n      this.attacks.push(this.messageMonsterHit + this.monsterHit);\n      this.playerHit = Math.floor(Math.random() * 15);\n      this.computerHealth -= this.playerHit;\n      this.attacks.push(this.messagePlayerHit + this.playerHit);\n      this.checker();\n    },\n    heal: function heal() {\n      this.monsterHit = Math.floor(Math.random() * 10);\n      this.userHealth -= this.monsterHit;\n      this.attacks.push(this.messageMonsterHit + this.monsterHit);\n      this.playerHit = Math.floor(Math.random() * 20);\n      this.userHealth += this.playerHit;\n\n      if (this.userHealth > 100) {\n        this.userHealth = 100;\n        this.attacks.push(\"PLAYER HEALS HIMSELF UPTO 100\");\n      } else {\n        this.attacks.push(this.messagePlayerHeal + this.playerHit);\n      }\n\n      this.checker();\n    },\n    specialattack: function specialattack() {\n      this.monsterHit = Math.floor(Math.random() * 15);\n      this.userHealth -= this.monsterHit;\n      this.attacks.push(this.messageMonsterHit + this.monsterHit);\n      this.playerHit = Math.floor(Math.random() * 20);\n      this.computerHealth -= this.playerHit;\n      this.attacks.push(this.messagePlayerHit + this.playerHit);\n      this.checker();\n    },\n    newGameOpen: function newGameOpen() {\n      this.userHealth = 100;\n      this.computerHealth = 100;\n      this.newGame = true;\n      this.attacks = [];\n    },\n    giveUp: function giveUp() {\n      this.newGameOpen();\n      this.newGame = false;\n    }\n  },\n  computed: function computed() {}\n};",{"version":3,"sources":["/Users/vijaykrishna/Downloads/Tutorialcodes/VueJSFromScratch/src/pages/Practise/Practise.js"],"names":["name","data","userHealth","computerHealth","newGame","playerHit","monsterHit","winner","messagePlayerHit","messageMonsterHit","messagePlayerHeal","attacks","methods","checker","alert","attack","Math","floor","random","push","heal","specialattack","newGameOpen","giveUp","computed"],"mappings":"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","sourcesContent":["\nexport default {\n    name:'Practise',\n    data () {\n        return {\n            userHealth:100,\n            computerHealth:100,\n            newGame: false,\n            playerHit:0,\n            monsterHit:0,\n            winner:'',\n            messagePlayerHit :\"PLAYER HIT MONSTER BY \",\n            messageMonsterHit : \"MONSTER HIT PLAYER BY \",\n            messagePlayerHeal : \"PLAYER HEALS HIMSELF BY \",\n            attacks: []\n        }\n    },\n    methods : {\n        checker () {\n            if(this.computerHealth<=0 || this.userHealth<=0) {\n                if(this.computerHealth<=0 && this.userHealth<=0) {\n                    this.winner='draw'\n\n                } else if (this.computerHealth<=0) {\n                    this.winner='user'\n                } else if (this.userHealth <= 0) {\n                    this.winner='computer'\n                }\n                this.newGame = false;\n                alert(\"Winner is \" + this.winner)\n                return false\n            } else {\n                return true\n            }       \n        },\n         attack () {\n            this.monsterHit = Math.floor(Math.random()*15);\n            this.userHealth -= this.monsterHit;\n            this.attacks.push(this.messageMonsterHit + this.monsterHit);\n            this.playerHit = Math.floor(Math.random()*15);\n            this.computerHealth -= this.playerHit;\n            this.attacks.push(this.messagePlayerHit + this.playerHit);\n            this.checker();   \n        },\n        heal () {\n            this.monsterHit = Math.floor(Math.random()*10);\n            this.userHealth -= this.monsterHit;\n            this.attacks.push(this.messageMonsterHit + this.monsterHit);\n            this.playerHit = Math.floor(Math.random()*20);\n            this.userHealth += this.playerHit;\n            if(this.userHealth>100) {\n                this.userHealth=100\n                this.attacks.push(\"PLAYER HEALS HIMSELF UPTO 100\")\n            } else {\n                this.attacks.push(this.messagePlayerHeal + this.playerHit);\n            }\n            this.checker();\n        },\n        specialattack () {\n            this.monsterHit = Math.floor(Math.random()*15);\n            this.userHealth -= this.monsterHit;\n            this.attacks.push(this.messageMonsterHit + this.monsterHit);\n            this.playerHit = Math.floor(Math.random()*20);\n            this.computerHealth -= this.playerHit;\n            this.attacks.push(this.messagePlayerHit + this.playerHit);\n            this.checker();\n        },\n        newGameOpen () {\n            this.userHealth=100;\n            this.computerHealth=100;\n            this.newGame=true;\n            this.attacks=[];\n        },\n        giveUp () {\n            this.newGameOpen();\n            this.newGame=false;\n        }\n\n    },\n    computed () {\n        \n    }\n}"]}]}